{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React Course\\\\LinkedIn Clone\\\\linkedin-clone\\\\src\\\\Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Feed.css\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport ImageIcon from '@mui/icons-material/Image';\nimport InputOption from './InputOption';\nimport SubscriptionsIcon from '@mui/icons-material/Subscriptions';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport CalendarViewDayIcon from '@mui/icons-material/CalendarViewDay';\nimport Post from './Post';\nimport { db } from \"./firebase\";\nimport { firebase } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Feed() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [posts, setPosts] = useState([]);\n  /*posts keeps the posts and setPosts is used everytime we want to change a post\r\n  -There can be many posts in the feed */\n  //listens to changes in posts collection\n\n  useEffect(() => {\n    db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []);\n\n  const sendPost = event => {\n    event.preventDefault();\n    /**prevents the refresh when the enter key is pressed */\n\n    db.collection(\"posts\").add({\n      name: 'Nonelela Cele',\n      description: 'Final year computer science student',\n      message: input,\n      photoUrl: '',\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(''); //clears the text field after the user posted a post\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed_inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed_input\",\n        children: [/*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendPost,\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed_inputOptions\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ImageIcon,\n          title: \"Photo\",\n          color: \"#70B5F9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SubscriptionsIcon,\n          title: \"Video\",\n          color: \"#E7A33E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: EventNoteIcon,\n          title: \"Event\",\n          color: \"#C0CBCD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: CalendarViewDayIcon,\n          title: \"Write article\",\n          color: \"#7FC15E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), posts.map(_ref => {\n      let {\n        id,\n        data: {\n          name,\n          description,\n          message,\n          photoUrl\n        }\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Post, {\n        name: name,\n        description: description,\n        message: message,\n        photoUrl: photoUrl\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    }\n    /**Renders every single post*/\n    ), /*#__PURE__*/_jsxDEV(Post, {\n      name: \"Nonelela Cele\",\n      description: \"Just testing\",\n      message: \"Hello react\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"MEeyxDbZS+v+j/YPUImDYVftg9w=\");\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/React Course/LinkedIn Clone/linkedin-clone/src/Feed.js"],"names":["React","useEffect","useState","CreateIcon","ImageIcon","InputOption","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Post","db","firebase","Feed","input","setInput","posts","setPosts","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","sendPost","event","preventDefault","add","name","description","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Feed.css\"\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport InputOption from './InputOption';\r\nimport SubscriptionsIcon from '@mui/icons-material/Subscriptions';\r\nimport EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport CalendarViewDayIcon from '@mui/icons-material/CalendarViewDay';\r\nimport Post from './Post';\r\nimport {db} from \"./firebase\";\r\nimport {firebase} from \"./firebase\"\r\n\r\nfunction Feed() {\r\n\r\n    const[input,setInput]=useState('')\r\n    const [posts,setPosts]=useState([]) /*posts keeps the posts and setPosts is used everytime we want to change a post\r\n                                        -There can be many posts in the feed */\r\n\r\n    //listens to changes in posts collection\r\n    useEffect(() =>{\r\n        db.collection(\"posts\").orderBy('timestamp','desc').onSnapshot(snapshot=>{\r\n            setPosts(snapshot.docs.map((doc)=>(\r\n                {\r\n                    id:doc.id,\r\n                    data:doc.data(),\r\n                }))\r\n            )\r\n        })\r\n    },[])\r\n\r\n    const sendPost=(event)=>{\r\n        event.preventDefault();/**prevents the refresh when the enter key is pressed */\r\n        db.collection(\"posts\").add({\r\n            name:'Nonelela Cele',\r\n            description:'Final year computer science student',\r\n            message:input,\r\n            photoUrl:'',\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setInput('') //clears the text field after the user posted a post\r\n    }\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed_inputContainer\">\r\n                <div className=\"feed_input\">\r\n                    <CreateIcon/>\r\n                    <form>\r\n                        <input value={input} onChange={e=>setInput(e.target.value)} type=\"text\"/>\r\n                        <button onClick={sendPost} type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed_inputOptions\">\r\n                    <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\"/>\r\n                    <InputOption Icon={SubscriptionsIcon} title=\"Video\" \r\n                    color=\"#E7A33E\"/>\r\n                    <InputOption Icon={EventNoteIcon} title=\"Event\" \r\n                    color=\"#C0CBCD\"/>\r\n                    <InputOption Icon={CalendarViewDayIcon} title=\"Write article\"\r\n                     color=\"#7FC15E\"/>\r\n                </div>\r\n            </div> \r\n            {/**Post Section */}\r\n            {posts.map(({id,data:{name,description,message,photoUrl}})=>\r\n                <Post\r\n                key={id}\r\n                name={name}\r\n                description={description}\r\n                message={message}\r\n                photoUrl={photoUrl}/>\r\n                /**Renders every single post*/\r\n            )}\r\n         \r\n            <Post name='Nonelela Cele' \r\n            description='Just testing'\r\n            message='Hello react'/>\r\n        </div>\r\n    )\r\n}\r\nexport default Feed\r\n"]},"metadata":{},"sourceType":"module"}